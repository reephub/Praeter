// Top-level build file where you can add configuration options common to all sub-projects/modules.
ext {
    minSdkVersion = 21
    targetSdkVersion = 30
    compileSdkVersion = 30
    buildToolsVersion = "30.0.2"

    // App dependencies
    multidexVersion = "2.0.1"
    appCompatVersion = '1.2.0'
    materialVersion = '1.3.0'
    constraintLayoutVersion = '2.0.4'
    navigationFragmentVersion = '2.3.5'
    navigationUiVersion = '2.3.5'
    recyclerViewVersion = '1.2.0'
    cardViewVersion = "1.0.0"

    autoFillVersion = '1.1.0'
    googleClientVersion = '1.31.3'
    googleLocationVersion = '18.0.0'
    mapsVersion = '17.0.0'

    firebaseBomVersion = "26.0.0"
    adsVersion = "19.5.0"

    roomVersion = "2.2.5"

    daggerVersion = '2.18'

    parcelerVersion = '1.1.13'

    rxjavaVersion = "3.0.0"
    rxandroidVersion = "3.0.0"

    butterknifeVersion = '10.2.3'

    retrofit2Version = "2.9.0"
    okhttp3LoggingVersion = '5.0.0-alpha.2'

    dexterVersion = '6.2.2'

    threetenVersion = '1.3.0'

    timberVersion = "4.7.1"

    lombokVersion = '1.18.18'

    glideVersion = '4.12.0'
    blurryVersion = "3.0.0"
    glideTransformationVersion = "4.0.0"

    //Tests
    junitVersion = "4.12"
    testJUnitVersion = "1.1.1"
    testEspressoVersion = "3.2.0"

    generalDependencies = [

            multidex              : "androidx.multidex:multidex:$multidexVersion",
            appcompat             : "androidx.appcompat:appcompat:$appCompatVersion",
            material              : "com.google.android.material:material:$materialVersion",
            constraintLayout      : "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion",
            navigationFragment    : "androidx.navigation:navigation-fragment:$navigationFragmentVersion",
            navigationUi          : "androidx.navigation:navigation-ui:$navigationUiVersion",
            recyclerView          : "androidx.recyclerview:recyclerview:$recyclerViewVersion",
            cardView              : "androidx.cardview:cardview:$cardViewVersion",

            autoFill              : "androidx.autofill:autofill:$autoFillVersion",

            googleClient          : "com.google.api-client:google-api-client:$googleClientVersion",

            // Maps
            location              : "com.google.android.gms:play-services-location:$googleLocationVersion",
            maps                  : "com.google.android.gms:play-services-maps:$mapsVersion",

            // Firebase
            firebasePlatform      : "com.google.firebase:firebase-bom:$firebaseBomVersion",
            firebaseAnalitycs     : "com.google.firebase:firebase-analytics",
            firebaseCrashlytics   : "com.google.firebase:firebase-crashlytics",
            firebaseMessaging     : "com.google.firebase:firebase-messaging",
            firebasePerf          : "com.google.firebase:firebase-perf",
            firebaseAds           : "com.google.android.gms:play-services-ads:$adsVersion",

            /* Android Architecture Component - Room Persistance Lib  */
            roomRuntime           : "androidx.room:room-runtime:$roomVersion",
            roomRX                : "androidx.room:room-rxjava2:$roomVersion",
            roomCompiler          : "androidx.room:room-compiler:$roomVersion",

            /* Dagger2 - We are going to use dagger.android which includes
             * support for Activity and fragment injection so we need to include
             * the following dependencies */
            dagger                : "com.google.dagger:dagger:$daggerVersion",
            daggerCompiler        : "com.google.dagger:dagger-compiler:$daggerVersion",
            daggerAndroid         : "com.google.dagger:dagger-android:$daggerVersion",
            daggerAndroidSupport  : "com.google.dagger:dagger-android-support:$daggerVersion",// if you use the support libraries
            daggerAndroidProcessor: "com.google.dagger:dagger-android-processor:$daggerVersion",

            // Parceler
            parceler              : "org.parceler:parceler-api:$parcelerVersion",
            parcelerAnnotation    : "org.parceler:parceler:$parcelerVersion",

            // RxJava / RxAndroid
            rxjava                : "io.reactivex.rxjava3:rxjava:$rxjavaVersion",
            rxandroid             : "io.reactivex.rxjava3:rxandroid:$rxandroidVersion",

            // Butterknife : Views binding
            //noinspection AnnotationProcessorOnCompilePath
            butterknife           : "com.jakewharton:butterknife:$butterknifeVersion",
            butterknifeAnnotation : "com.jakewharton:butterknife-compiler:$butterknifeVersion",

            /* Retrofit using RxJava2, Okhttp, Okhttp logging interceptor, Gson  */
            retrofit              : "com.squareup.retrofit2:retrofit:$retrofit2Version",
            retrofitConverterGson : "com.squareup.retrofit2:converter-gson:$retrofit2Version",
            retrofitRxJava        : "com.squareup.retrofit2:adapter-rxjava3:$retrofit2Version",
            okhttp3Logging        : "com.squareup.okhttp3:logging-interceptor:$okhttp3LoggingVersion",

            // Dexter
            dexter                : "com.karumi:dexter:$dexterVersion",

            //ThreeTen : Alternative to Android Calendar API
            threeten              : "com.jakewharton.threetenabp:threetenabp:$threetenVersion",

            // Timber : Logging library
            timber                : "com.jakewharton.timber:timber:$timberVersion",

            // Lombok
            lombok                : "org.projectlombok:lombok:$lombokVersion",
            lombokAnnotation      : "org.projectlombok:lombok:$lombokVersion",

            // Glide
            glide                 : "com.github.bumptech.glide:glide:$glideVersion",
            glideAnnotation       : "com.github.bumptech.glide:compiler:$glideVersion",

            // Blurry
            blurry                : "jp.wasabeef:blurry:$blurryVersion",
            glideTransformation   : "jp.wasabeef:glide-transformations:$glideTransformationVersion"

    ]

    testDependencies = [

            junit    : "junit:junit:$junitVersion",
            testJUnit: "androidx.test.ext:junit:$testJUnitVersion",
            espresso : "androidx.test.espresso:espresso-core:$testEspressoVersion"
    ]
}

buildscript {
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:4.1.3"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files

        // Butterknife
        classpath 'com.jakewharton:butterknife-gradle-plugin:10.2.3'

        // Google Services
        classpath 'com.google.gms:google-services:4.3.5'

        // Add the Crashlytics Gradle plugin (be sure to add version
        // 2.0.0 or later if you built your app with Android Studio 4.1).
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.5.2'

    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}