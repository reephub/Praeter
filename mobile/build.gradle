// Top-level build file where you can add configuration options common to all sub-projects/modules.
ext {
    minSdkVersion = 21
    targetSdkVersion = 31
    compileSdkVersion = 31
    buildToolsVersion = "30.0.3"

    // App dependencies
    multidexVersion = "2.0.1"
    appCompatVersion = '1.3.1'
    materialVersion = '1.4.0'
    constraintLayoutVersion = '2.1.0'
    navigationFragmentVersion = '2.3.5'
    navigationUiVersion = '2.3.5'
    recyclerViewVersion = '1.2.1'
    cardViewVersion = "1.0.0"

    autoFillVersion = '1.1.0'
    googleClientVersion = '1.32.1'
    googleLocationVersion = '18.0.0'
    mapsVersion = '17.0.1'

    firebaseBomVersion = "26.0.0"
    adsVersion = "19.5.0"

    roomVersion = "2.2.5"

    daggerVersion = '2.38.1'

    retrofit2Version = "2.9.0"
    okhttp3LoggingVersion = '5.0.0-alpha.2'

    dexterVersion = '6.2.3'

    threetenVersion = '1.3.1'

    timberVersion = '5.0.1'

    glideVersion = '4.12.0'
    blurryVersion = '4.0.0'
    glideTransformationVersion = '4.3.0'

    //Tests
    junitVersion = "4.12"
    testJUnitVersion = "1.1.1"
    testEspressoVersion = "3.2.0"

    generalDependencies = [

            multidex              : "androidx.multidex:multidex:$multidexVersion",
            appcompat             : "androidx.appcompat:appcompat:$appCompatVersion",
            material              : "com.google.android.material:material:$materialVersion",
            constraintLayout      : "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion",
            navigationFragment    : "androidx.navigation:navigation-fragment:$navigationFragmentVersion",
            navigationUi          : "androidx.navigation:navigation-ui:$navigationUiVersion",
            recyclerView          : "androidx.recyclerview:recyclerview:$recyclerViewVersion",
            cardView              : "androidx.cardview:cardview:$cardViewVersion",

            autoFill              : "androidx.autofill:autofill:$autoFillVersion",

            googleClient          : "com.google.api-client:google-api-client:$googleClientVersion",

            // Maps
            location              : "com.google.android.gms:play-services-location:$googleLocationVersion",
            maps                  : "com.google.android.gms:play-services-maps:$mapsVersion",

            // Firebase
            firebasePlatform      : "com.google.firebase:firebase-bom:$firebaseBomVersion",
            firebaseAnalitycs     : "com.google.firebase:firebase-analytics",
            firebaseCrashlytics   : "com.google.firebase:firebase-crashlytics",
            firebaseMessaging     : "com.google.firebase:firebase-messaging",
            firebasePerf          : "com.google.firebase:firebase-perf",
            firebaseAds           : "com.google.android.gms:play-services-ads:$adsVersion",

            /* Android Architecture Component - Room Persistance Lib  */
            roomRuntime           : "androidx.room:room-runtime:$roomVersion",
            roomRX                : "androidx.room:room-rxjava2:$roomVersion",
            roomCompiler          : "androidx.room:room-compiler:$roomVersion",

            /* Dagger2 - We are going to use dagger.android which includes
             * support for Activity and fragment injection so we need to include
             * the following dependencies */
            dagger                : "com.google.dagger:hilt-android:$daggerVersion",
            daggerCompiler        : "com.google.dagger:hilt-compiler:$daggerVersion",
            daggerAndroidSupport  : "com.google.dagger:hilt-android-compiler:$daggerVersion",// if you use the support libraries



            /* Retrofit using RxJava2, Okhttp, Okhttp logging interceptor, Gson  */
            retrofit              : "com.squareup.retrofit2:retrofit:$retrofit2Version",
            okhttp3Logging        : "com.squareup.okhttp3:logging-interceptor:$okhttp3LoggingVersion",

            // Dexter
            dexter                : "com.karumi:dexter:$dexterVersion",

            //ThreeTen : Alternative to Android Calendar API
            threeten              : "com.jakewharton.threetenabp:threetenabp:$threetenVersion",

            // Timber : Logging library
            timber                : "com.jakewharton.timber:timber:$timberVersion",


            // Glide
            glide                 : "com.github.bumptech.glide:glide:$glideVersion",
            glideAnnotation       : "com.github.bumptech.glide:compiler:$glideVersion",

            // Blurry
            blurry                : "jp.wasabeef:blurry:$blurryVersion",
            glideTransformation   : "jp.wasabeef:glide-transformations:$glideTransformationVersion"

    ]

    testDependencies = [

            junit    : "junit:junit:$junitVersion",
            testJUnit: "androidx.test.ext:junit:$testJUnitVersion",
            espresso : "androidx.test.espresso:espresso-core:$testEspressoVersion"
    ]
}

buildscript {
    ext.kotlin_version = '1.5.30'
    ext.hilt_version = '2.38.1'

    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.2.2'

        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files

        // Dagger
        classpath "com.google.dagger:hilt-android-gradle-plugin:$hilt_version"

        // Google Services
        classpath 'com.google.gms:google-services:4.3.10'

        // Add the Crashlytics Gradle plugin (be sure to add version
        // 2.0.0 or later if you built your app with Android Studio 4.1).
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.7.1'

    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}