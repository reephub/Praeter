plugins {
    id 'com.android.application'
}

apply plugin: 'com.google.gms.google-services'
// Apply the Crashlytics Gradle plugin
apply plugin: 'com.google.firebase.crashlytics'

// version information
def versionMajor = 1
def versionMinor = 0
def versionPatch = 8

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.praeter"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion

        versionCode 10 * (versionMajor * 1000 + versionMinor * 100 + versionPatch)
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"

        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath false
            }
        }

        // Enabling multidex support.
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    // AndroidX
    implementation rootProject.ext.generalDependencies.multidex
    implementation rootProject.ext.generalDependencies.appcompat
    implementation rootProject.ext.generalDependencies.material
    implementation rootProject.ext.generalDependencies.constraintLayout
    implementation rootProject.ext.generalDependencies.navigationFragment
    implementation rootProject.ext.generalDependencies.navigationUi
    implementation rootProject.ext.generalDependencies.recyclerView
    implementation rootProject.ext.generalDependencies.cardView

    implementation rootProject.ext.generalDependencies.autoFill

    // Google Play
    // Maps
    implementation rootProject.ext.generalDependencies.maps
    implementation 'com.google.android.gms:play-services-location:17.1.0'
    implementation 'com.google.api-client:google-api-client:1.30.9'

    // Firebase
    // Import the Firebase BoM
    implementation platform(rootProject.ext.generalDependencies.firebasePlatform)
    // Add the dependencies for any other desired Firebase products
    // https://firebase.google.com/docs/android/setup#available-libraries
    // Add the dependency for the Firebase SDK for Google Analytics
    // When using the BoM, don't specify versions in Firebase dependencies
    implementation rootProject.ext.generalDependencies.firebaseAnalitycs
    // Add the dependency for the Firebase SDK for Google Crashlytics
    // When using the BoM, don't specify versions in Firebase dependencies
    implementation rootProject.ext.generalDependencies.firebaseCrashlytics
    implementation rootProject.ext.generalDependencies.firebaseMessaging
    implementation rootProject.ext.generalDependencies.firebasePerf
    //implementation rootProject.ext.generalDependencies.firebaseAds

    // RxJava / RxAndroid
    implementation rootProject.ext.generalDependencies.rxjava
    implementation rootProject.ext.generalDependencies.rxandroid

    /* Dagger2 - We are going to use dagger.android which includes
     * support for Activity and fragment injection so we need to include
     * the following dependencies */
    implementation rootProject.ext.generalDependencies.dagger
    annotationProcessor rootProject.ext.generalDependencies.daggerCompiler
    implementation rootProject.ext.generalDependencies.daggerAndroid
    implementation rootProject.ext.generalDependencies.daggerAndroidSupport
    // if you use the support libraries
    annotationProcessor rootProject.ext.generalDependencies.daggerAndroidProcessor


    // Butterknife : Views binding
    //noinspection AnnotationProcessorOnCompilePath
    implementation rootProject.ext.generalDependencies.butterknife
    annotationProcessor rootProject.ext.generalDependencies.butterknifeAnnotation

    // Glide
    implementation rootProject.ext.generalDependencies.glide
    annotationProcessor rootProject.ext.generalDependencies.glideAnnotation

    // Blurry
    implementation rootProject.ext.generalDependencies.blurry
    implementation rootProject.ext.generalDependencies.glideTransformation


    /* Retrofit using RxJava2, Okhttp, Okhttp logging interceptor, Gson  */
    implementation rootProject.ext.generalDependencies.retrofit
    implementation rootProject.ext.generalDependencies.retrofitConverterGson
    implementation rootProject.ext.generalDependencies.retrofitRxJava
    implementation rootProject.ext.generalDependencies.okhttp3Logging

    // Parceler
    implementation rootProject.ext.generalDependencies.parceler
    annotationProcessor rootProject.ext.generalDependencies.parcelerAnnotation


    // Dexter : permissions
    implementation rootProject.ext.generalDependencies.dexter

    //ThreeTen : Alternative to Android Calendar API
    implementation rootProject.ext.generalDependencies.threeten

    // Timber : Logging library
    implementation rootProject.ext.generalDependencies.timber

    // Lombok
    compileOnly rootProject.ext.generalDependencies.lombok
    annotationProcessor rootProject.ext.generalDependencies.lombokAnnotation


    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}